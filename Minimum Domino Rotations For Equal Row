https://leetcode.com/problems/minimum-domino-rotations-for-equal-row/


Code:


class Solution {
public:
    int minDominoRotations(vector<int>& tops, vector<int>& bottoms) {
        int arr_t[6], arr_b[6], max=0, index, count=0;
        bool top;
        for(int i=0; i<6; i++){
            arr_t[i]=0;
            arr_b[i]=0;
        }
        
        for(int i=0; i<tops.size(); i++){
            arr_t[tops[i]-1]++;
            arr_b[bottoms[i]-1]++;
        }
        
        for(int i=0; i<6; i++){
            if(max<arr_t[i] + arr_b[i]){
                max = arr_t[i] + arr_b[i];
                index=i;
            }
        }
        
        if(arr_t[index]>arr_b[index]){
            top=true;
        }
        else{ 
            top=false;
        }
        
        if(top){
            for(int i=0; i<tops.size(); i++){
                if(tops[i] == index+1){
                    continue;
                }
                else{
                    if(bottoms[i] == index+1){
                        count++;
                        continue;
                    }
                    else{
                        return -1;
                    }
                }
            }
        }
        else{
            for(int i=0; i<tops.size(); i++){
                if(bottoms[i] == index+1){
                    continue;
                }
                else{
                    if(tops[i] == index+1){
                        count++;
                        continue;
                    }
                    else{
                        return -1;
                    }
                }
            }
        }
        return count;
    }
};
